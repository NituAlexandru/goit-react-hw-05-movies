{"version":3,"file":"static/js/928.cdc59260.chunk.js","mappings":"mMAGAA,EAAAA,EAAAA,SAAAA,QCF4B,+BDI5B,MAAMC,EAAS,CACbA,OAAQ,CACNC,QCPmB,mCDQnBC,SAAU,UAIDC,EAAsBC,UACjC,IAEE,aADuBL,EAAAA,EAAAA,IAAU,qBAAsBC,IACvCK,KAAKC,OAIvB,CAHE,MAAOC,GAEP,MADAC,QAAQD,MAAM,kCAAmCA,GAC3CA,CACR,GAGWE,EAAeL,UAC1B,IAKE,aAJuBL,EAAAA,EAAAA,IAAU,uBAADW,OACPC,GACvBX,IAEcK,KAAKC,OAIvB,CAHE,MAAOC,GAEP,MADAC,QAAQD,MAAM,wBAADG,OAAyBC,EAAS,MAAMJ,GAC/CA,CACR,GAGWK,EAAoBR,UAC/B,IAEE,aADuBL,EAAAA,EAAAA,IAAU,UAADW,OAAWG,GAAWb,IACtCK,IAIlB,CAHE,MAAOE,GAEP,MADAC,QAAQD,MAAM,gCAAiCA,GACzCA,CACR,GAGWO,EAAiBV,UAC5B,IAEE,aADuBL,EAAAA,EAAAA,IAAU,SAADW,OAAUG,EAAO,aAAab,IAC9CK,KAAKU,IAIvB,CAHE,MAAOR,GAEP,MADAC,QAAQD,MAAM,6BAA8BA,GACtCA,CACR,GAGWS,EAAoBZ,UAC/B,IAEE,aADuBL,EAAAA,EAAAA,IAAU,SAADW,OAAUG,EAAO,aAAab,IAC9CK,KAAKC,OAIvB,CAHE,MAAOC,GAEP,MADAC,QAAQD,MAAM,gCAAiCA,GACzCA,CACR,E,qFE7DF,QAAkC,gCAAlC,EAA2E,uBAA3E,EAA6G,yBAA7G,EAAkJ,0B,aCKlJ,MAwDA,EAxDeU,KACb,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAeC,IAAoBF,EAAAA,EAAAA,UAAS,IAC7CG,GAAWC,EAAAA,EAAAA,OACVC,IAAgBC,EAAAA,EAAAA,OAEvBC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAcH,EAAaI,IAAI,SACjCD,IACFT,EAASS,GACTE,EAAaF,GACf,GACC,CAACH,IAEJ,MAAMK,EAAe1B,UACnB,IACE,MAAME,QAAgBG,EAAAA,EAAAA,IAAaS,GACnCI,EAAiBhB,EAGnB,CAFE,MAAOC,GACPC,QAAQD,MAAM,0BAA2BA,EAC3C,GASF,OACEwB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAuBC,SAAA,EACrCH,EAAAA,EAAAA,MAAA,QAAMI,SARK/B,UACbgC,EAAMC,iBACDnB,GACLK,EAAS,iBAADb,OAAkBQ,GAAS,CAAEoB,MAAO,CAAEC,KAAM,WAAa,EAKxCL,SAAA,EACrBM,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,MAAOxB,EACPyB,SAAUC,GAAKzB,EAASyB,EAAEC,OAAOH,OACjCI,YAAY,2BAEdN,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAST,UAAWC,EAAiBC,SAAC,eAErDM,EAAAA,EAAAA,KAAA,MAAIR,UAAWC,EAAcC,SAC1Bb,EAAc0B,KAAIC,IACjBR,EAAAA,EAAAA,KAAA,MAAmBR,UAAWC,EAAgBC,UAC5CM,EAAAA,EAAAA,KAACS,EAAAA,GAAI,CACHC,GAAE,WAAAxC,OAAasC,EAAMG,IACrBb,MAAO,CAAEC,KAAM,UAAWa,OAAQlC,GAAQgB,SAEzCc,EAAMK,SALFL,EAAMG,UAUf,C","sources":["components/API/ApiService.jsx","components/API/ApiKey.jsx","webpack://goit-react-hw-05-movies/./src/components/Pages/Movies.module.css?cab4","components/Pages/Movies.jsx"],"sourcesContent":["import { API_KEY, API_BASE_URL } from './ApiKey';\nimport axios from 'axios';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const handleSearch = async movieName => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${movieName}`,\n      params\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error searching for \"${movieName}\":`, error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","export const API_KEY = '08adfe7b0fa20f77490ccc776050efbc';\nexport const API_BASE_URL = 'https://api.themoviedb.org/3';","// extracted by mini-css-extract-plugin\nexport default {\"moviesContainer\":\"Movies_moviesContainer__toWeq\",\"movies\":\"Movies_movies__09H+E\",\"listItem\":\"Movies_listItem__73ijX\",\"submitBtn\":\"Movies_submitBtn__1PvRE\"};","// Movies.jsx\nimport React, { useEffect, useState } from 'react';\nimport { handleSearch } from '../API/ApiService';\nimport { Link, useNavigate, useSearchParams } from 'react-router-dom';\nimport styles from './Movies.module.css';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    if (searchQuery) {\n      setQuery(searchQuery);\n      searchMovies(searchQuery);\n    }\n  }, [searchParams]);\n\n  const searchMovies = async query => {\n    try {\n      const results = await handleSearch(query);\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n    }\n  };\n\n  const search = async event => {\n    event.preventDefault();\n    if (!query) return;\n    navigate(`/movies?query=${query}`, { state: { from: 'search' } });\n  };\n\n  return (\n    <div className={styles.moviesContainer}>\n      <form onSubmit={search}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          placeholder=\"Search for a movie...\"\n        />\n        <button type=\"submit\" className={styles.submitBtn}>Search</button>\n      </form>\n      <ul className={styles.movies}>\n        {searchResults.map(movie => (\n          <li key={movie.id} className={styles.listItem}>\n            <Link\n              to={`/movies/${movie.id}`}\n              state={{ from: '/movies', search: query }}\n            >\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","params","api_key","language","fetchTrendingMovies","async","data","results","error","console","handleSearch","concat","movieName","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","Movies","query","setQuery","useState","searchResults","setSearchResults","navigate","useNavigate","searchParams","useSearchParams","useEffect","searchQuery","get","searchMovies","_jsxs","className","styles","children","onSubmit","event","preventDefault","state","from","_jsx","type","value","onChange","e","target","placeholder","map","movie","Link","to","id","search","title"],"sourceRoot":""}