{"version":3,"file":"static/js/998.e1967bbc.chunk.js","mappings":"mMAGAA,EAAAA,EAAAA,SAAAA,QCF4B,+BDI5B,MAAMC,EAAS,CACbA,OAAQ,CACNC,QCPmB,mCDQnBC,SAAU,UAIDC,EAAsBC,UACjC,IAEE,aADuBL,EAAAA,EAAAA,IAAU,qBAAsBC,IACvCK,KAAKC,OAIvB,CAHE,MAAOC,GAEP,MADAC,QAAQD,MAAM,kCAAmCA,GAC3CA,CACR,GAGWE,EAAeL,UAC1B,IAKE,aAJuBL,EAAAA,EAAAA,IAAU,uBAADW,OACPC,GACvBX,IAEcK,KAAKC,OAIvB,CAHE,MAAOC,GAEP,MADAC,QAAQD,MAAM,wBAADG,OAAyBC,EAAS,MAAMJ,GAC/CA,CACR,GAGWK,EAAoBR,UAC/B,IAEE,aADuBL,EAAAA,EAAAA,IAAU,UAADW,OAAWG,GAAWb,IACtCK,IAIlB,CAHE,MAAOE,GAEP,MADAC,QAAQD,MAAM,gCAAiCA,GACzCA,CACR,GAGWO,EAAiBV,UAC5B,IAEE,aADuBL,EAAAA,EAAAA,IAAU,SAADW,OAAUG,EAAO,aAAab,IAC9CK,KAAKU,IAIvB,CAHE,MAAOR,GAEP,MADAC,QAAQD,MAAM,6BAA8BA,GACtCA,CACR,GAGWS,EAAoBZ,UAC/B,IAEE,aADuBL,EAAAA,EAAAA,IAAU,SAADW,OAAUG,EAAO,aAAab,IAC9CK,KAAKC,OAIvB,CAHE,MAAOC,GAEP,MADAC,QAAQD,MAAM,gCAAiCA,GACzCA,CACR,E,6EE7DF,QAAgC,4BAAhC,EAAwE,wBAAxE,EAA6G,yBAA7G,EAAkJ,wBAAlJ,EAA0L,4BAA1L,EAAsO,4B,aCItO,MA0CA,EA1CaU,KACX,MAAOF,EAAMG,IAAWC,EAAAA,EAAAA,UAAS,KAC3B,QAAEN,IAAYO,EAAAA,EAAAA,MAepB,OAbAC,EAAAA,EAAAA,YAAU,KACUjB,WAChB,IACE,MAAMkB,QAAiBR,EAAAA,EAAAA,IAAeD,GACtCK,EAAQI,EAGV,CAFE,MAAOf,GACPC,QAAQD,MAAM,6BAA8BA,EAC9C,GAGFgB,EAAW,GACV,CAACV,IAECE,EAAKS,QAKRC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAqBC,SAClCb,EAAKc,KAAIC,IACRC,EAAAA,EAAAA,MAAA,OAAyBL,UAAWC,EAAiBC,SAAA,CAClDE,EAAME,cACLP,EAAAA,EAAAA,KAAA,OACEQ,IAAG,kCAAAvB,OAAoCoB,EAAME,cAC7CE,IAAG,GAAAxB,OAAKoB,EAAMK,MACdT,UAAWC,KAGbF,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAqBC,SAAC,sBAExCH,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAiBC,SAAEE,EAAMK,QACxCJ,EAAAA,EAAAA,MAAA,KAAGL,UAAWC,EAAqBC,SAAA,CAAC,cAAYE,EAAMM,eAX9CN,EAAMO,cANbZ,EAAAA,EAAAA,KAAA,OAAAG,SAAK,kCAoBN,C","sources":["components/API/ApiService.jsx","components/API/ApiKey.jsx","webpack://goit-react-hw-05-movies/./src/components/Pages/Cast.module.css?8592","components/Pages/Cast.jsx"],"sourcesContent":["import { API_KEY, API_BASE_URL } from './ApiKey';\nimport axios from 'axios';\n\naxios.defaults.baseURL = API_BASE_URL;\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const handleSearch = async movieName => {\n  try {\n    const response = await axios.get(\n      `/search/movie?query=${movieName}`,\n      params\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(`Error searching for \"${movieName}\":`, error);\n    throw error;\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, params);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/credits?`, params);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`movie/${movieId}/reviews?`, params);\n    return response.data.results;\n  } catch (error) {\n    console.error('Error fetching movie reviews:', error);\n    throw error;\n  }\n};\n","export const API_KEY = '08adfe7b0fa20f77490ccc776050efbc';\nexport const API_BASE_URL = 'https://api.themoviedb.org/3';","// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__86M6b\",\"actorCard\":\"Cast_actorCard__GIxBe\",\"actorImage\":\"Cast_actorImage__0QFIH\",\"actorName\":\"Cast_actorName__xeYF4\",\"characterName\":\"Cast_characterName__tgk6h\",\"noImageBanner\":\"Cast_noImageBanner__Z9Yj0\"};","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../API/ApiService';\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const castData = await fetchMovieCast(movieId);\n        setCast(castData);\n      } catch (error) {\n        console.error('Error fetching movie cast:', error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  if (!cast.length) {\n    return <div>No cast information available.</div>;\n  }\n\n  return (\n    <div className={styles.castContainer}>\n      {cast.map(actor => (\n        <div key={actor.cast_id} className={styles.actorCard}>\n          {actor.profile_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n              alt={`${actor.name}`}\n              className={styles.actorImage}\n            />\n          ) : (\n            <div className={styles.noImageBanner}>No img available</div>\n          )}\n          <h3 className={styles.actorName}>{actor.name}</h3>\n          <p className={styles.characterName}>Character: {actor.character}</p>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","params","api_key","language","fetchTrendingMovies","async","data","results","error","console","handleSearch","concat","movieName","fetchMovieDetails","movieId","fetchMovieCast","cast","fetchMovieReviews","Cast","setCast","useState","useParams","useEffect","castData","fetchCast","length","_jsx","className","styles","children","map","actor","_jsxs","profile_path","src","alt","name","character","cast_id"],"sourceRoot":""}